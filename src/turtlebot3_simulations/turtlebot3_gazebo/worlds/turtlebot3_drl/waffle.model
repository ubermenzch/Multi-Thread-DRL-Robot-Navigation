<?xml version="1.0"?>
<sdf version="1.6">
  <world name="default">

    <plugin name="gazebo_ros_state" filename="libgazebo_ros_state.so">
      <ros>
        <namespace>/gazebo</namespace>
      </ros>

      <update_rate>1.0</update_rate>
    </plugin>

    <!-- <include>
      <uri>model://ground_plane</uri>
    </include> -->

    <model name='ground_plane'>
    <static>true</static>
    <link name='link'>
      <collision name='collision'>
        <geometry>
          <plane>
            <!-- normal定义了平面的朝向, 0 0 1 表示Z轴向上 -->
            <normal>0 0 1</normal>
            <!-- size定义了平面的尺寸(米), 改这里可以把地面变大变小 -->
            <size>100 100</size> 
          </plane>
        </geometry>
        <surface>
          <friction>
            <!-- 修改物理属性：摩擦力 -->
            <ode>
              <mu>100</mu>
              <mu2>50</mu2>
            </ode>
          </friction>
          <contact>
              <ode>
                  <!-- 修改物理属性: 柔软度等 -->
                  <kp>1e+13</kp>
                  <kd>1</kd>
              </ode>
          </contact>
          <bounce>
              <!-- 修改物理属性：弹力 -->
              <restitution_coefficient>0</restitution_coefficient>
              <threshold>1e+06</threshold>
          </bounce>
        </surface>
      </collision>
      <visual name='visual'>
        <cast_shadows>false</cast_shadows>
        <geometry>
          <plane>
            <normal>0 0 1</normal>
            <!-- 视觉尺寸要和物理尺寸保持一致 -->
            <size>100 100</size>
          </plane>
        </geometry>
        <material>
          <!-- 修改外观：使用Gazebo内置的带格子的灰色纹理 -->
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Grey</name>
          </script>
          <!-- 如果想用纯色，可以注释掉上面的<script>，用下面的<ambient> -->
          <!-- 
          <ambient>0.0 0.5 0.0 1.0</ambient>  (R, G, B, Alpha) 这是一个绿色
          <diffuse>0.0 0.5 0.0 1.0</diffuse>
          -->
        </material>
      </visual>
    </link>
  </model>

    <include>
      <uri>model://sun</uri>
    </include>

    <scene>
      <shadows>false</shadows>
    </scene>

    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose frame=''>0.319654 -0.235002 9.29441 0 1.5138 0.009599</pose>
        <view_controller>orbit</view_controller>
        <projection_type>perspective</projection_type>
      </camera>
    </gui>

    <physics type="ode">
      <real_time_update_rate>1000.0</real_time_update_rate>
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <ode>
        <solver>
          <type>quick</type>
          <iters>150</iters>
          <precon_iters>0</precon_iters>
          <sor>1.400000</sor>
          <use_dynamic_moi_rescaling>1</use_dynamic_moi_rescaling>
        </solver>
        <constraints>
          <cfm>0.00001</cfm>
          <erp>0.2</erp>
          <contact_max_correcting_vel>2000.000000</contact_max_correcting_vel>
          <contact_surface_layer>0.01000</contact_surface_layer>
        </constraints>
      </ode>
    </physics>

    <include>
      <uri>model://turtlebot3_waffle</uri>
    </include>

    <include>
      <uri>model://10by10</uri>
    </include>

    <include>
      <uri>model://obstacle1</uri>
    </include>

    <include>
      <uri>model://obstacle2</uri>
    </include>

    <include>
      <uri>model://obstacle3</uri>
    </include>

    <include>
      <uri>model://obstacle4</uri>
    </include>

    <include>
      <uri>model://obstacle5</uri>
    </include>

    <include>
      <uri>model://obstacle6</uri>
    </include>

    <include>
      <uri>model://obstacle7</uri>
    </include>

    <include>
      <uri>model://obstacle8</uri>
    </include>

  </world>
</sdf>
